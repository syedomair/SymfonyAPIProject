
{
"swagger": "2.0",
"info": {
"title": "Crowd Valley API",
"description": "The Digital Back Office for Online Investing and Lending. <br><br>The Crowd Valley API is used to build online platforms and marketplaces globally for managing private placements, securities, real estate, crowdfunding, peer-to-peer lending, and public stock trading. This public REST API provides an end to end server side application, which supports the technical back office requirements for client side applications of various kinds in the online investing and lending markets. The Crowd Valley API also contains private financial back office functions and other services which are made available on request.<br><br>Further documentation and materials are released as part of the onboarding process after Sign Up.<br><br>See more at <a href='http://www.crowdvalley.com'>Crowd Valley</a>.",
"termsOfService": "http://www.crowdvalley.com/terms.html",
"version": "1.0.0",
"contact": {
"name": "Crowd Valley, Inc.",
"url": "http://www.crowdvalley.com",
"email": "support@crowdvalley.com"
}
},
"host": "{{ url('api_homepage')|trim('/')|replace({'http://': '', 'https://': ''}) }}",
"schemes": [
"{% if app.request.isSecure() %}https{% else %}http{% endif %}"
],
"basePath": "/v1",
"produces": [
"application/json"
],
"paths": {
"/": {
"get": {
"summary": "Crowd Valley API health status",
"description": "Check the current health status of the Crowd Valley API.\n",
"tags": [
"API Health"
],
"responses": {
"200": {
"description": "Success"
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}": {
"get": {
"summary": "Check the status of your network",
"description": "Check that your network has been set up and is available through the API with your API key.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"API Health"
],
"responses": {
"200": {
"description": "OK. Successfully authenticated with Network.",
"schema": {
"$ref": "#/definitions/Network"
}
},
"401": {
"description": "Unauthorized. API key does not match network.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/self": {
"get": {
"summary": "Logged-in user's account information",
"description": "Populate information on an user's private account page.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Self"
],
"responses": {
"200": {
"description": "OK. The User's Account information.",
"schema": {
"$ref": "#/definitions/User"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"delete": {
"summary": "Delete your account from this network",
"description": "Delete your account. Note that deleting accounts does not remove information from the database. The user's account is simply blocked so that they cannot access the site, and they are hidden from any public views.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Self"
],
"responses": {
"204": {
"description": "OK. The user has been removed from the network."
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"patch": {
"summary": "Update a user's profile information",
"description": "Update the logged-in user's profile information.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "updates",
"description": "Updated profile information. E.g. 'location=London&tagline=New%20tagline'",
"in": "query",
"required": true,
"type": "string",
"format": "text"
},
{
"name": "organization",
"description": "Organization information.",
"in": "body",
"required": true
}],
"tags": [
"Self"
],
"responses": {
"200": {
"description": "OK. The User's updated Profile information.",
"schema": {
"$ref": "#/definitions/Profile"
}
},
"400": {
"description": "Bad Request. Invalid data given in 'updates'.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/self/acceptTerms": {
"patch": {
"summary": "Accept Terms and Conditions",
"description": "Accept End User Terms and Conditions. Accepting Terms can be implemented as part of creating a user or as a separate step.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Self"
],
"responses": {
"204": {
"description": "OK. The User has successfully accepted Terms."
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/self/resetPassword": {
"post": {
"summary": "Reset Password",
"description": "Reset the User's password.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Self"
],
"responses": {
"204": {
"description": "OK. The User has successfully reset password."
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/self/changePassword": {
"post": {
"summary": "Change Password",
"description": "Change the User's password.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "oldPassword",
"in": "query",
"description": "Your current password.",
"required": true,
"type": "string",
"format": "text"
},
{
"name": "newPassword",
"in": "query",
"description": "Your new password.",
"required": true,
"type": "string",
"format": "text"
}
],
"tags": [
"Self"
],
"responses": {
"204": {
"description": "OK. The User has successfully reset password."
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"409": {
"description": "Conflict. Unable to change password.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/self/resendVerifyEmailLink": {
"post": {
"summary": "Resend the verify email link to the User",
"description": "Re-send the email verification link. The verification link is sent automatically when creating a new user. Clicking the link is required for users to pass the 'Email Verified' test.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Self"
],
"responses": {
"204": {
"description": "OK. The verification email has been successfully re-sent."
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/self/investments": {
"get": {
"summary": "Retrieve the user's investments",
"description": "Retrieve a list of the user's investments. This will include open investment offers as well as closed investments.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Self"
],
"responses": {
"200": {
"description": "OK. A list of all Investments made or proposed by the logged-in User.",
"schema": {
"$ref": "#/definitions/Investments"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/self/organizations": {
"get": {
"summary": "The User's Organizations",
"description": "A list of the logged-in User's Organizations. This could be used to show for which Organization(s) the User works or for which Organization(s) the User has created Offerings.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Self"
],
"responses": {
"200": {
"description": "OK. A list of the logged-in User's Organizations from this network.",
"schema": {
"$ref": "#/definitions/Organizations"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/users": {
"get": {
"summary": "Visible Users in your network",
"description": "Populate a public listing page of your visible Users. Users are visible if they have their Visibility field set to Open.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "offset",
"description": "List offset. Specify a limit and offset to handle pagination.",
"in": "query",
"type": "integer",
"format": "int32",
"required": false,
"default": 0
},
{
"name": "limit",
"description": "List limit. Specify a limit and offset to handle pagination.",
"in": "query",
"type": "integer",
"format": "int32",
"required": false,
"default": 10
},
{
"name": "fields",
"in": "query",
"description": "Limit the response fields to reduce bandwidth requirements. E.g. 'fields=givenName,familyName,tagline'",
"type": "string",
"format": "text",
"required": false,
"default": "all"
}
],
"tags": [
"Users"
],
"responses": {
"200": {
"description": "OK. A list of public users who are members of this network.",
"schema": {
"$ref": "#/definitions/Users"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"post": {
"summary": "Register a new User",
"description": "Register a new User. Implement this as part of your registration form, including as much information as you want to collect on the first form. User information can be changed or adjusted later using the 'self' endpoint.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "user",
"description": "The User.",
"in": "body",
"required": true,
"schema": {
"$ref": "#/definitions/User"
}
}
],
"tags": [
"Users"
],
"responses": {
"200": {
"description": "OK. The created User.",
"schema": {
"$ref": "#/definitions/User"
}
},
"400": {
"description": "Bad Request. Invalid data in 'user' field.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/users/{userID}": {
"get": {
"summary": "Retrieve a User's public profile information",
"description": "Populate a user's public profile information. Implement this to allow the logged-in user to see information about other users on the network. It will only populate all information if the target user's visibility is set to Open. This function will only show public profile information - it will not show private account information.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "userID",
"description": "The unique identifier of the User",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Users"
],
"responses": {
"200": {
"description": "OK. The User's Profile information.",
"schema": {
"$ref": "#/definitions/Profile"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/organizations": {
"get": {
"summary": "Retrieve a list of Organizations",
"description": "A list of visible Organizations in the network. Implement this to show a list of Organizations that are supporting various deals, or that are umbrella entities for various users. This will only show Organizations that have visibility set to Open.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "offset",
"description": "List offset. Specify a limit and offset to handle pagination.",
"in": "query",
"type": "integer",
"format": "int32",
"required": false,
"default": 0
},
{
"name": "limit",
"description": "List limit. Specify a limit and offset to handle pagination.",
"in": "query",
"type": "integer",
"format": "int32",
"required": false,
"default": 10
},
{
"name": "fields",
"in": "query",
"description": "Limit the response fields to reduce bandwidth requirements. E.g. 'displayName,industry'",
"type": "string",
"format": "text",
"required": false,
"default": "all"
},
{
"name": "sortByAscending",
"in": "query",
"description": "Sort the responses in ascending order by a common field. E.g. 'displayName'",
"type": "string",
"format": "text",
"required": false,
"default": "all"
},
{
"name": "sortByDescending",
"in": "query",
"description": "Sort the responses in descending order by a common field. E.g. 'displayName'",
"type": "string",
"format": "text",
"required": false,
"default": "all"
},
{
"name": "filter",
"in": "query",
"description": "Filter the responses by a common field. E.g. 'industry=Technology,location=London'",
"type": "string",
"format": "text",
"required": false,
"default": "all"
}
],
"tags": [
"Organizations"
],
"responses": {
"200": {
"description": "OK. A list of visible organizations from this network.",
"schema": {
"$ref": "#/definitions/Organizations"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"post": {
"summary": "Create a new Organization",
"description": "Create a new Organization.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "organization",
"description": "Organization information.",
"in": "body",
"required": true,
"schema": {
"$ref": "#/definitions/Organization"
}
}
],
"tags": [
"Organizations"
],
"responses": {
"200": {
"description": "OK. The created Organization.",
"schema": {
"$ref": "#/definitions/Organization"
}
},
"400": {
"description": "Bad Request. Invalid data contents.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/organizations/{organizationID}": {
"get": {
"summary": "Retrieve information about this Organization",
"description": "Information about the Organization. This will only work if the logged-in User is a team member of the Organization or the Organization has visibility set to Open.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "organizationID",
"description": "Unique identifier representing this Organization.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Organizations"
],
"responses": {
"200": {
"description": "OK. Information about the Organization.",
"schema": {
"$ref": "#/definitions/Organization"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"patch": {
"summary": "Update the Organization's information",
"description": "Update the Organization's information. This will only work if the logged-in User is a team member of the Organization.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "organizationID",
"description": "Unique identifier representing this Organization.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "updates",
"description": "Updated Organization information. E.g. 'location=London&briefDescription=New%20description'",
"in": "query",
"required": true,
"type": "string",
"format": "text"
}
],
"tags": [
"Organizations"
],
"responses": {
"200": {
"description": "OK. The updated Organization information.",
"schema": {
"$ref": "#/definitions/Profile"
}
},
"400": {
"description": "Bad Request. Invalid data given in 'updates'.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"put": {
"summary": "Replace the Organization's information",
"description": "Replace the Organization's information. This will only work if the logged-in User is a team member of the Organization.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "organizationID",
"description": "Unique identifier representing this Organization.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "organization",
"description": "New Organization information",
"in": "body",
"required": true,
"schema": {
"$ref": "#/definitions/Organization"
}
}
],
"tags": [
"Organizations"
],
"responses": {
"200": {
"description": "OK. The updated Organization.",
"schema": {
"$ref": "#/definitions/Organization"
}
},
"400": {
"description": "Bad Request. Invalid data given in 'organization'.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"delete": {
"summary": "Delete the Organization from this network",
"description": "Delete the Organization from the network. This will only work if the logged-in User is a team member of the Organization. It will not work if the Organization has any Offerings that do not have status as Canceled.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "organizationID",
"description": "Unique identifier representing this Organization.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Organizations"
],
"responses": {
"204": {
"description": "OK. The Organization has been removed from the network."
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/organizations/{organizationID}/offerings": {
"get": {
"summary": "Retrieve Offerings for this Organization",
"description": "A list of visible Offerings for this Organization. Visible Offerings are those with status Restricted, Published, Live, Closing or Settled.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "organizationID",
"description": "Unique identifier representing this Organization.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Organizations"
],
"responses": {
"200": {
"description": "OK. A list of this Organization's visible Offerings.",
"schema": {
"$ref": "#/definitions/Offerings"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"post": {
"summary": "Create a new Offering for this Organization",
"description": "Create a new Offering for this Organization. The logged-in User must be a team member of this Organization.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "organizationID",
"description": "Unique identifier representing this Organization.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "offering",
"description": "The Offering.",
"in": "body",
"required": true,
"schema": {
"$ref": "#/definitions/Offering"
}
}
],
"tags": [
"Organizations"
],
"responses": {
"200": {
"description": "OK. The created Offering.",
"schema": {
"$ref": "#/definitions/Offering"
}
},
"400": {
"description": "Bad Request. Invalid data.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not in team of Organization or Admin.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/organizations/{organizationID}/documents": {
"get": {
"summary": "List of documents for this Organization",
"description": "A list of visible Documents for this Organization. Visible Documents are those with lifecycleStage set to Published. Implement this to store documents related to the Organization as a whole, not related to any particular Offering.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "organizationID",
"description": "Unique identifier representing this Organization.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Organizations"
],
"responses": {
"200": {
"description": "OK. A list of this Organization's visible Documents.",
"schema": {
"$ref": "#/definitions/Documents"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"post": {
"summary": "Add a Document to this Organization",
"description": "Add a Document to this Organization. The logged-in User must be a team member of the Organization.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "organizationID",
"description": "Unique identifier representing this Organization.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Organizations"
],
"responses": {
"200": {
"description": "OK. The new Document.",
"schema": {
"$ref": "#/definitions/Document"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network or User does not have required access rights.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/documents/{documentID}": {
"get": {
"summary": "Information about a Document",
"description": "Information about this Document. This will work only if the Document visibility is set to Published or the logged-in User is a team member of the Organization.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "documentID",
"description": "Unique identifier representing this Document.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Documents"
],
"responses": {
"200": {
"description": "OK. Information about this Document.",
"schema": {
"$ref": "#/definitions/Document"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"put": {
"summary": "Replace this Document",
"description": "Replace this Document. This will work only if the logged-in User is a team member of the Organization.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "documentID",
"description": "Unique identifier representing this Document.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "document",
"description": "New Document",
"in": "body",
"required": true,
"schema": {
"$ref": "#/definitions/Document"
}
}
],
"tags": [
"Documents"
],
"responses": {
"200": {
"description": "OK. Information about this Document.",
"schema": {
"$ref": "#/definitions/Document"
}
},
"400": {
"description": "Bad Request. Invalid data in 'updates'.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"patch": {
"summary": "Update Document",
"description": "Update about this Document. This will work only if the logged-in User is a team member of the Organization.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "documentID",
"description": "Unique identifier representing this Document.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "updates",
"description": "Updated profile information. E.g. 'fileAlias=New%20Document%20Name'",
"in": "query",
"required": true,
"type": "string",
"format": "text"
}
],
"tags": [
"Documents"
],
"responses": {
"200": {
"description": "OK. Information about this Document.",
"schema": {
"$ref": "#/definitions/Document"
}
},
"400": {
"description": "Bad Request. Invalid data in 'updates'.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"delete": {
"summary": "Delete Document",
"description": "Delete this Document. The Document is not deleted but it is marked as 'Archived' and it can no longer be accessed or edited through the site.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "documentID",
"description": "Unique identifier representing this Document.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Documents"
],
"responses": {
"204": {
"description": "OK. The offer has been successfully withdrawn."
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network or User does not have required access rights.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/offerings": {
"get": {
"summary": "List of Offerings",
"description": "Populate a live Offerings page or a historical/closed deals page. Visible Offerings are those with status Restricted, Published, Live, Closing or Settled.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "offset",
"description": "List offset. Specify a limit and offset to handle pagination.",
"in": "query",
"type": "integer",
"format": "int32",
"required": false,
"default": 0
},
{
"name": "limit",
"description": "List limit. Specify a limit and offset to handle pagination.",
"in": "query",
"type": "integer",
"format": "int32",
"required": false,
"default": 10
},
{
"name": "fields",
"in": "query",
"description": "Limit the response fields to reduce bandwidth requirements. E.g. 'fields=name,lifecycleStage,fundingGoal'",
"type": "string",
"format": "text",
"required": false,
"default": "all"
},
{
"name": "sortByAscending",
"in": "query",
"description": "Sort the responses in ascending order by a common field. E.g. 'amount'",
"type": "string",
"format": "text",
"required": false,
"default": "all"
},
{
"name": "sortByDescending",
"in": "query",
"description": "Sort the responses in descending order by a common field. E.g. 'amount'",
"type": "string",
"format": "text",
"required": false,
"default": "all"
},
{
"name": "filter",
"in": "query",
"description": "Filter the responses by a common field. E.g. 'lifecycleStage=3'",
"type": "string",
"format": "text",
"required": false,
"default": "all"
}
],
"tags": [
"Offerings"
],
"responses": {
"200": {
"description": "OK. A list of visible Offerings from this network.",
"schema": {
"$ref": "#/definitions/Offerings"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/offerings/{offeringID}": {
"get": {
"summary": "Information about this Offering",
"description": "Information about this Offering. This will only work if the Offering is visible in the network.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "offeringID",
"description": "Unique identifier representing this Offering.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Offerings"
],
"responses": {
"200": {
"description": "OK. Information on this Offering.",
"schema": {
"$ref": "#/definitions/Offering"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"patch": {
"summary": "Update the Offering's information",
"description": "Update the Offering's information. This will only work if the logged-in User is a team member of the Organization for this Offering and the Offering status is Draft.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "offeringID",
"description": "Unique identifier representing this Offering.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "updates",
"description": "Updated Organization information. E.g. 'name=Series%20A&description=New%20description'",
"in": "query",
"required": true,
"type": "string",
"format": "text"
}
],
"tags": [
"Offerings"
],
"responses": {
"200": {
"description": "OK. The updated Offering information.",
"schema": {
"$ref": "#/definitions/Offering"
}
},
"400": {
"description": "Bad Request. Invalid data given in 'updates'.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"put": {
"summary": "Replace the Offering's information",
"description": "Replace the Offering's information. This will only work if the logged-in User is a team member of the Organization for this Offering and the Offering status is Draft.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "offeringID",
"description": "Unique identifier representing this Offering.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "offering",
"description": "New Offering information",
"in": "body",
"required": true,
"schema": {
"$ref": "#/definitions/Offering"
}
}
],
"tags": [
"Offerings"
],
"responses": {
"200": {
"description": "OK. The updated Offering.",
"schema": {
"$ref": "#/definitions/Offering"
}
},
"400": {
"description": "Bad Request. Invalid data given in 'offering'.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"delete": {
"summary": "Cancel the Offering",
"description": "Cancel the Offering. This will only work if the logged-in User is a team member of the Organization for this Offering. It will not work unless the Offering has status as Draft or Submitted.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "offeringID",
"description": "Unique identifier representing this Offering.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Offerings"
],
"responses": {
"204": {
"description": "OK. The Offering has been removed from the network."
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/offerings/{offeringID}/investments": {
"get": {
"summary": "List of Investments for this Offering",
"description": "Populate a list of Investments for this Offering. This can be used to show a list of current investors for this Offering. Investments will be shown in full if visibility is set to Open.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "offeringID",
"description": "Unique identifier representing this Offering.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "offset",
"description": "List offset. Specify a limit and offset to handle pagination.",
"in": "query",
"type": "integer",
"format": "int32",
"required": false,
"default": 0
},
{
"name": "limit",
"description": "List limit. Specify a limit and offset to handle pagination.",
"in": "query",
"type": "integer",
"format": "int32",
"required": false,
"default": 10
},
{
"name": "fields",
"in": "query",
"description": "Limit the response fields to reduce bandwidth requirements. E.g. 'fields=amount'",
"type": "string",
"format": "text",
"required": false,
"default": "all"
}
],
"tags": [
"Offerings"
],
"responses": {
"200": {
"description": "OK. A list of Investments for this Offering.",
"schema": {
"$ref": "#/definitions/Investments"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"post": {
"summary": "Submit an Investment",
"description": "Submit an Investment for this Offering. This can be used to implement an 'Invest' button on an Offering's page.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "offeringID",
"description": "Unique identifier representing this Offering.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "offer",
"description": "The Investment.",
"in": "body",
"required": true,
"schema": {
"$ref": "#/definitions/Investment"
}
}
],
"tags": [
"Offerings"
],
"responses": {
"200": {
"description": "OK. Information about the submitted Investment.",
"schema": {
"$ref": "#/definitions/Investment"
}
},
"400": {
"description": "Bad Request. Invalid data given in 'offer'.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"409": {
"description": "Conflict. Offer does not fulfil business rules for this offering.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
},
"/{network}/investments/{investmentID}": {
"get": {
"summary": "Information about this Investment",
"description": "Information about this Investment. It will only work if the Investment has visibility set to Open or Anonymous.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "investmentID",
"description": "Unique identifier representing this Investment.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Investments"
],
"responses": {
"200": {
"description": "OK. Information about this Investment.",
"schema": {
"$ref": "#/definitions/Investment"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"patch": {
"summary": "Update an Investment",
"description": "Update this Investment. The Investment must have been made by the logged-in User.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "investmentID",
"description": "Unique identifier representing this Investment.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
},
{
"name": "updates",
"description": "Updated profile information. E.g. 'amount=1000'",
"in": "query",
"required": true,
"type": "string",
"format": "text"
}
],
"tags": [
"Investments"
],
"responses": {
"200": {
"description": "OK. Information about this Investment.",
"schema": {
"$ref": "#/definitions/Investment"
}
},
"400": {
"description": "Bad Request. Invalid data in 'updates'.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"409": {
"description": "Conflict. Investment does not fulfil business rules for this offering.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
},
"delete": {
"summary": "Withdraw this Investment",
"description": "Withdraw this Investment. The Investment must have been made by the logged-in User.",
"parameters": [
{
"name": "network",
"description": "The name of your network",
"in": "path",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ network }}"
},
{
"name": "investmentID",
"description": "Unique identifier representing this Investment.",
"in": "path",
"required": true,
"type": "number",
"format": "long"
},
{
"name": "cv-auth",
"description": "Your Crowd Valley API Authorization token.",
"in": "header",
"required": true,
"type": "string",
"format": "text",
"defaultValue": "{{ cvAuth|raw }}"
}
],
"tags": [
"Investments"
],
"responses": {
"204": {
"description": "OK. The investment has been successfully withdrawn."
},
"401": {
"description": "Unauthorized. API key does not match network",
"schema": {
"$ref": "#/definitions/Error"
}
},
"403": {
"description": "Forbidden. Logged-in User is not member of network or User did not make this offer.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"404": {
"description": "Not Found. Network does not exist",
"schema": {
"$ref": "#/definitions/Error"
}
},
"409": {
"description": "Conflict. Investment has already been accepted.",
"schema": {
"$ref": "#/definitions/Error"
}
},
"default": {
"description": "Unexpected error",
"schema": {
"$ref": "#/definitions/Error"
}
}
}
}
}
},
"definitions": {
"Offering": {
"properties": {
"id": {
"type": "number",
"format": "long",
"description": "Unique identifier representing the Offering"
},
"currency": {
"type": "string",
"description": "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
},
"fundingGoal": {
"type": "number",
"description": "The funding goal for this offering."
},
"lifecycleStage": {
"type": "integer",
"format": "int32",
"description": "0 = Draft, 1 = Submitted, 2 = Rejected, 3 = Approved, 4 = Restricted, 5 = Published, 6 = Live, 7 = Closing, 8 = Settled, 9 = Canceled"
},
"isCurrent": {
"type": "boolean",
"description": "Flag to say whether this is the organization's current offering."
},
"name": {
"type": "string",
"description": "The name of the Offering, for example, 'Series A'."
},
"additionalType": {
"type": "string",
"description": "An additional type for the Offering, typically used for adding more specific types from external vocabularies."
},
"minCommitment": {
"type": "number",
"format": "double",
"description": "The minimum amount that a User can offer."
},
"maxCommitment": {
"type": "number",
"format": "double",
"description": "The maximum amount that a User can offer."
},
"openDate": {
"type": "string",
"format": "date",
"description": "The starting date on which investments are allowed for this offering."
},
"closeDate": {
"type": "string",
"format": "date",
"description": "The end date on which investments are no longer allowed for this offering."
},
"offeringDescription": {
"type": "string",
"description": "Long-form description of the offering to complement 'name'."
},
"maxOverfundingAmount": {
"type": "number",
"format": "double",
"description": "The maximum amount raised by a Offering after which Users cannot submit new Investments."
},
"externalCommitments": {
"type": "number",
"format": "double",
"description": "Funding received outside the platform that should be counted towards this Offering's total."
},
"customInformation": {
"type": "array",
"description": "A key/value structure allowing custom information to be stored for this Offering.",
"items": {
"$ref": "#/definitions/CustomInformation"
}
},
"numOfShares": {
"type": "number",
"format": "double",
"description": "The number of shares available in this offering."
},
"term": {
"type": "number",
"format": "double",
"description": "The term of the loan (used in debt offerings)."
},
"interestRate": {
"type": "number",
"format": "double",
"description": "The annual interest offered (used in debt offerings)."
},
"equityOffered": {
"type": "number",
"format": "double",
"description": "Amount of equity offered as a percentage (used in equity offerings)."
},
"valuation": {
"type": "number",
"format": "long",
"description": "The current pre-money valuation of the current Organization for the current Offering (used in equity offerings)."
}
}
},
"Offerings": {
"properties": {
"offset": {
"type": "integer",
"format": "int32",
"description": "Position in pagination."
},
"limit": {
"type": "integer",
"format": "int32",
"description": "Number of items to retrieve (100 max)."
},
"count": {
"type": "integer",
"format": "int32",
"description": "Total number of items available."
},
"list": {
"type": "array",
"items": {
"$ref": "#/definitions/Offering"
}
}
}
},
"Profile": {
"properties": {
"image": {
"type": "string",
"description": "Image URL of the Profile."
},
"user_id": {
"type": "string",
"description": "The User id for this Profile."
},
"jobTitle": {
"type": "string",
"description": "The job title of the person (for example, Financial Manager)."
},
"alternateName": {
"type": "string",
"description": "An alias for the User."
},
"biography": {
"type": "string",
"description": "Biography of the User."
},
"website": {
"type": "string",
"description": "URL of a reference Web page that unambiguously indicates the User's identity. E.g. the URL of the User's Wikipedia page or official website."
},
"tagline": {
"type": "string",
"description": "A short tagline to summarise the User"
},
"timezone": {
"type": "string",
"description": "The User's timezone"
},
"location": {
"type": "string",
"description": "The User's location. E.g. San Francisco."
},
"industry": {
"type": "string",
"description": "The User's industry."
},
"additionalType": {
"type": "string",
"description": "An additional type for the User, typically used for adding more specific types from external vocabularies."
},
"teamMemberOf": {
"$ref": "#/definitions/Organizations",
"description": "The Organizations with which this User is associated. Inverse of team."
},
"customInformation": {
"type": "array",
"description": "A key/value structure allowing custom information to be stored for this Profile.",
"items": {
"$ref": "#/definitions/CustomInformation"
}
}
}
},
"Address": {
"properties": {
"building": {
"type": "string",
"description": "The building name or number, for example, '1600'."
},
"streetAddress": {
"type": "string",
"description": "The street address. For example, Amphitheatre Pkwy."
},
"postalCode": {
"type": "string",
"description": "The postal code. For example, '94043'."
},
"postOfficeBoxNumber": {
"type": "string",
"description": "The post office box number for PO box addresses."
},
"addressLocality": {
"type": "string",
"description": "The locality. For example, Mountain View."
},
"addressRegion": {
"type": "string",
"description": "The region, county or state. For example, CA."
},
"addressCountry": {
"type": "string",
"description": "The country. For example, USA. You can also provide the two-letter [ISO 3166-1 Alpha 2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code."
},
"moveInDate": {
"type": "string",
"format": "date",
"description": "The date on which the User moved to this address."
},
"moveOutDate": {
"type": "string",
"format": "date",
"description": "The date on which the User moved to this address. Can be NULL if this is the User's current address."
}
}
},
"User": {
"properties": {
"id": {
"type": "number",
"format": "long",
"description": "Unique identifier for the User."
},
"givenName": {
"type": "string",
"description": "Given name. In the U.S., the first name of a User. This can be used along with familyName instead of the name property."
},
"familyName": {
"type": "string",
"description": "Family name. In the U.S., the last name of a User. This can be used along with givenName instead of the name property."
},
"additionalName": {
"type": "string",
"description": "An additional name for a User, can be used for a middle name."
},
"gender": {
"type": "string",
"description": "The gender of the User",
"pattern": "M/F"
},
"honorificPrefix": {
"type": "string",
"description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr."
},
"honorificSuffix": {
"type": "string",
"description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW."
},
"name": {
"type": "string",
"description": "Full name. This can be used when givenName and familyName are not applicable."
},
"email": {
"type": "string",
"description": "The User's registered email address."
},
"password": {
"type": "string",
"format": "password",
"description": "The User's password."
},
"passwordExpiry": {
"type": "string",
"format": "date",
"description": "The date on which the User's current password expires."
},
"addresses": {
"type": "array",
"description": "The User's addresses.",
"items": {
"$ref": "#/definitions/Address"
}
},
"birthDate": {
"type": "string",
"format": "date",
"description": "Date of birth."
},
"birthPlace": {
"type": "string",
"description": "The place where the User was born."
},
"nationality": {
"type": "string",
"description": "Nationality of the User. For example, USA. You can also provide the two-letter [ISO 3166-1 Alpha 2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code."
},
"taxID": {
"type": "string",
"description": "The Tax / Fiscal ID of the User, e.g. the TIN in the US or the CIF/NIF in Spain."
},
"telephone": {
"type": "string",
"description": "The telephone number."
},
"hasAcceptedTermsOfService": {
"type": "boolean",
"description": "Flag to show whether the User has accepted Terms and Conditions for your platform."
},
"hasVerifiedEmail": {
"type": "boolean",
"description": "Flag to show whether the User has verified their email account."
},
"hasCompletedRegistration": {
"type": "boolean",
"description": "Flag to show whether the User has completed their registration requirements for this network."
},
"bankDetails": {
"$ref": "#/definitions/BankDetails",
"description": "The User's bank details."
},
"passportNumber": {
"type": "string",
"description": "The User's full passport number."
},
"profile": {
"$ref": "#/definitions/Profile",
"description": "The User's profile information."
},
"referralCode": {
"type": "string",
"description": "The code used by the User when registering to the network."
},
"affiliateCode": {
"type": "string",
"description": "The code given out by the User as an affiliate."
},
"wallets": {
"type": "array",
"items": {
"$ref": "#/definitions/Wallet"
},
"description": "The online wallets available for this User in this network."
},
"customInformation": {
"type": "array",
"description": "A key/value structure allowing custom information to be stored for this User.",
"items": {
"$ref": "#/definitions/CustomInformation"
}
},
"visibility": {
"type": "integer",
"format": "int32",
"description": "0 = Open, 1 = Hidden, 2 = Anonymous"
}
}
},
"Wallet": {
"properties": {
"id": {
"type": "number",
"format": "long",
"description": "Unique identifier representing this Wallet."
},
"balance": {
"type": "number",
"format": "double",
"description": "The total balance in the user's wallet including amounts that have been committed to pending investments."
},
"committedBalance": {
"type": "number",
"format": "double",
"description": "The amount that has been committed from the user's total balance."
},
"freeBalance": {
"type": "number",
"format": "double",
"description": "The amount that is currently available to invest from the user's total balance."
},
"user": {
"$ref": "#/definitions/User",
"description": "The User who owns this Wallet."
},
"organization": {
"$ref": "#/definitions/Organization",
"description": "The Organization that owns this Wallet."
}
}
},
"BankDetails": {
"properties": {
"accountNumber": {
"type": "string",
"description": "Your Account Number"
},
"swiftCode": {
"type": "string",
"description": "Your SWIFT Code"
},
"bankName": {
"type": "string",
"description": "The Bank's name"
},
"bankAddress": {
"$ref": "#/definitions/Address",
"description": "The Bank's address"
}
}
},
"Investment": {
"properties": {
"id": {
"type": "number",
"format": "long",
"description": "Unique identifier representing this Investment."
},
"author": {
"$ref": "#/definitions/User",
"description": "The User who submitted this Investment."
},
"offering": {
"$ref": "#/definitions/Offering",
"description": "The Offering for which this Investment was submitted."
},
"investmentAmount": {
"type": "number",
"format": "double",
"description": "The investment amount submitted by the investor for this Offering."
},
"currency": {
"type": "string",
"description": "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
},
"visibility": {
"type": "integer",
"format": "int32",
"description": "0 = Open, 1 = Hidden, 2 = Anonymous"
},
"lifecycleStage": {
"type": "integer",
"format": "int32",
"description": "0 = Open, 1 = Rejected, 2 = Approved, 3 = Withdrawn"
},
"term": {
"type": "number",
"format": "double",
"description": "The term of the loan."
},
"interestRate": {
"type": "number",
"format": "double",
"description": "The annual interest offered."
},
"customInformation": {
"type": "array",
"description": "A key/value structure allowing custom information to be stored for this Organization.",
"items": {
"$ref": "#/definitions/CustomInformation"
}
}
}
},
"Investments": {
"properties": {
"offset": {
"type": "integer",
"format": "int32",
"description": "Position in pagination."
},
"limit": {
"type": "integer",
"format": "int32",
"description": "Number of items to retrieve (100 max)."
},
"count": {
"type": "integer",
"format": "int32",
"description": "Total number of items available."
},
"list": {
"type": "array",
"items": {
"$ref": "#/definitions/Investment"
}
}
}
},
"Users": {
"properties": {
"offset": {
"type": "integer",
"format": "int32",
"description": "Position in pagination."
},
"limit": {
"type": "integer",
"format": "int32",
"description": "Number of items to retrieve (100 max)."
},
"count": {
"type": "integer",
"format": "int32",
"description": "Total number of items available."
},
"list": {
"type": "array",
"items": {
"$ref": "#/definitions/User"
}
}
}
},
"Organization": {
"properties": {
"id": {
"type": "number",
"format": "long",
"description": "Unique identifier representing this Organization."
},
"shortDescription": {
"type": "string",
"description": "Short description of the Organization."
},
"displayName": {
"type": "string",
"description": "Display name of the Organization."
},
"logo": {
"type": "string",
"description": "Image URL representing the Organization."
},
"location": {
"type": "string",
"description": "The location of the Organization (not necessarily the same as 'address')."
},
"addresses": {
"type": "array",
"description": "The Organization's address and address history.",
"items": {
"$ref": "#/definitions/Address"
}
},
"contactPoint": {
"$ref": "#/definitions/User",
"description": "A contact point for the Organization."
},
"email": {
"type": "string",
"description": "An email address for the Organization."
},
"team": {
"$ref": "#/definitions/Users",
"description": "The Users who are part of this Organization. Inverse of teamMemberOf."
},
"foundingDate": {
"type": "string",
"format": "date",
"description": "The date that this Organization was founded."
},
"foundingLocation": {
"type": "string",
"description": "The place where the Organization was founded."
},
"legalName": {
"type": "string",
"description": "The official name of the Organization, e.g. the registered company name."
},
"offerings": {
"type": "array",
"items": {
"$ref": "#/definitions/Offerings"
},
"description": "A list of the Offerings of this Organization."
},
"taxID": {
"type": "string",
"description": "The Tax / Fiscal ID of the Organization, e.g. the TIN in the US or the CIF/NIF in Spain."
},
"telephone": {
"type": "string",
"description": "The telephone number."
},
"creditScore": {
"type": "string",
"description": "The credit score assigned to the Organization."
},
"visibility": {
"type": "integer",
"format": "int32",
"description": "1 = Draft, 2 = Open, 3 = Archived"
},
"industry": {
"type": "string",
"description": "The Organization's industry."
},
"additionalType": {
"type": "string",
"description": "An additional type for the Organization, typically used for adding more specific types from external vocabularies."
},
"alternateName": {
"type": "string",
"description": "An alias for the Organization."
},
"website": {
"type": "string",
"description": "URL of a reference Web page that unambiguously indicates the Organization's identity."
},
"wallets": {
"type": "array",
"items": {
"$ref": "#/definitions/Wallet"
},
"description": "The online wallets available for this Organization in this network."
},
"customInformation": {
"type": "array",
"description": "A key/value structure allowing custom information to be stored for this Organization.",
"items": {
"$ref": "#/definitions/CustomInformation"
}
}
}
},
"Organizations": {
"properties": {
"offset": {
"type": "integer",
"format": "int32",
"description": "Position in pagination."
},
"limit": {
"type": "integer",
"format": "int32",
"description": "Number of items to retrieve (100 max)."
},
"count": {
"type": "integer",
"format": "int32",
"description": "Total number of items available."
},
"list": {
"type": "array",
"items": {
"$ref": "#/definitions/Organization"
}
}
}
},
"CustomInformation": {
"properties": {
"key": {
"type": "string",
"description": "The key for this custom information. E.g. 'subSector'"
},
"value": {
"type": "string",
"description": "The value of this custom information. E.g. 'Water Treatment'"
}
}
},
"Documents": {
"properties": {
"offset": {
"type": "integer",
"format": "int32",
"description": "Position in pagination."
},
"limit": {
"type": "integer",
"format": "int32",
"description": "Number of items to retrieve (100 max)."
},
"count": {
"type": "integer",
"format": "int32",
"description": "Total number of items available."
},
"list": {
"type": "array",
"items": {
"$ref": "#/definitions/Document"
}
}
}
},
"Document": {
"properties": {
"id": {
"type": "number",
"format": "long",
"description": "Unique identifier representing the Document"
},
"lifecycleStage": {
"type": "integer",
"format": "int32",
"description": "1 = Draft, 2 = Submitted, 3 = Restricted, 4 = Published, 5 = Archived"
},
"url": {
"type": "string",
"format": "text",
"description": "The document's full URL"
},
"fileName": {
"type": "string",
"format": "text",
"description": "The document's file name, e.g., current-year-financials.pdf"
},
"fileAlias": {
"type": "string",
"format": "text",
"description": "The publicly visible alias of the document, e.g., 'Current Year Financials'"
},
"fileType": {
"type": "string",
"format": "text",
"description": "The file type of the document, e.g. 'PDF'"
},
"fileDescription": {
"type": "string",
"format": "text",
"description": "The publicly visible description of the document, e.g. 'Our company's most recent financial statement'"
},
"tag": {
"type": "string",
"format": "text",
"description": "A configurable identifier that can be used to categorize documents"
},
"customInformation": {
"type": "array",
"description": "A key/value structure allowing custom information to be stored for this Document.",
"items": {
"$ref": "#/definitions/CustomInformation"
}
}
}
},
"Error": {
"properties": {
"code": {
"type": "integer",
"format": "int32"
},
"userMessage": {
"type": "string"
},
"developerMessage": {
"type": "string"
},
"fields": {
"type": "array",
"items": {
"$ref": "#/definitions/CustomInformation"
}
}
}
},
"Network": {
"properties": {
"networkName": {
"type": "string",
"format": "text",
"description": "The Network name"
},
"team": {
"$ref": "#/definitions/Users",
"description": "The Users who are admins of this Network."
}
}
}
}
}